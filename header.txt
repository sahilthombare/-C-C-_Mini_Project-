#pragma once
#include <vector> 
// CPractise1Dlg dialog
class CPractise1Dlg : public CDialogEx
{
// Construction
public:
	CPractise1Dlg(CWnd* pParent = nullptr);	// standard constructor

// Dialog Data
#ifdef AFX_DESIGN_TIME
	enum { IDD = IDD_PRACTISE1_DIALOG };
#endif

	CImageList m_ImageList;

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV support

// Implementation
protected:
	HICON m_hIcon;
	virtual BOOL OnInitDialog();
	afx_msg void OnSysCommand(UINT nID, LPARAM lParam);
	afx_msg void OnPaint();
	afx_msg HCURSOR OnQueryDragIcon();
	DECLARE_MESSAGE_MAP()
public:
	afx_msg void OnBnClickedOk();
	CEdit m_editbox;
	afx_msg void OnBnClickedAdd();
	CListBox m_listbox;
	CComboBox m_combobox;
	CTreeCtrl m_tree;

	void CPractise1Dlg::OnLbnSelchangeList();
	void CPractise1Dlg::OnCbnSelchangeCombo();
	void CPractise1Dlg::OnTvnSelchangedTree(NMHDR* pNMHDR, LRESULT* pResult);
	void CPractise1Dlg::SelectStringInControls(const CString& str);
	HTREEITEM CPractise1Dlg::FindTreeItem(HTREEITEM hItem, const CString& str);

	afx_msg void OnCustomDrawTree(NMHDR* pNMHDR, LRESULT* pResult);
	void CPractise1Dlg::OnBnClickedDel();
	void CPractise1Dlg::CollectDescendantStrings(HTREEITEM hItem, std::vector<CString>& descendantStrings);
};
